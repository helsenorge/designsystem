@use 'sass:map';
@use '../../scss/spacers' as spacers;
@use '../../scss/font-settings' as font-settings;
@use '../../scss/breakpoints' as breakpoints;
@import '../../scss/supernova/styles/colors.css';

.expander-list {
  list-style: none;
  padding: 0;
  width: inherit;
  margin: 0;

  &__item {
    border: 0;
    position: relative;

    &--line {
      border-bottom: 1px solid var(--color-base-border-onlight);

      &:first-of-type {
        border-top: 1px solid var(--color-base-border-onlight);
      }

      &--blueberry,
      .expander-list-link--line--blueberry {
        background-color: var(--core-color-blueberry-50);
      }

      &--cherry,
      .expander-list-link--line--cherry {
        background-color: var(--core-color-cherry-50);
      }

      &--neutral,
      .expander-list-link--line--neutral {
        background-color: var(--core-color-neutral-50);
      }

      &--white,
      .expander-list-link--line--white {
        background-color: var(--color-base-background-white);
      }
    }

    &--outline {
      background-color: var(--color-base-background-white);

      &--white {
        border-top: spacers.getSpacer(2xs) var(--core-color-neutral-100) solid;
        border-left: spacers.getSpacer(2xs) var(--core-color-neutral-100) solid;
        border-right: spacers.getSpacer(2xs) var(--core-color-neutral-100) solid;

        &:last-of-type {
          border-bottom: spacers.getSpacer(2xs) var(--core-color-neutral-100) solid;
        }
      }

      &--blueberry {
        border-top: spacers.getSpacer(2xs) var(--core-color-blueberry-100) solid;
        border-left: spacers.getSpacer(2xs) var(--core-color-blueberry-100) solid;
        border-right: spacers.getSpacer(2xs) var(--core-color-blueberry-100) solid;

        &:last-of-type {
          border-bottom: spacers.getSpacer(2xs) var(--core-color-blueberry-100) solid;
        }
      }

      &--cherry {
        border-top: spacers.getSpacer(2xs) var(--core-color-cherry-100) solid;
        border-left: spacers.getSpacer(2xs) var(--core-color-cherry-100) solid;
        border-right: spacers.getSpacer(2xs) var(--core-color-cherry-100) solid;

        &:last-of-type {
          border-bottom: spacers.getSpacer(2xs) var(--core-color-cherry-100) solid;
        }
      }

      &--neutral {
        border-top: spacers.getSpacer(2xs) var(--core-color-neutral-100) solid;
        border-left: spacers.getSpacer(2xs) var(--core-color-neutral-100) solid;
        border-right: spacers.getSpacer(2xs) var(--core-color-neutral-100) solid;

        &:last-of-type {
          border-bottom: spacers.getSpacer(2xs) var(--core-color-neutral-100) solid;
        }
      }
    }

    &--fill {
      &--blueberry,
      .expander-list-link--fill--blueberry {
        background-color: var(--core-color-blueberry-50);
      }

      &--cherry,
      .expander-list-link--fill--cherry {
        background-color: var(--core-color-cherry-50);
      }

      &--neutral,
      .expander-list-link--fill--neutral {
        background-color: var(--core-color-neutral-50);
      }

      &--white,
      .expander-list-link--fill--white {
        background-color: var(--color-base-background-white);
      }
    }

    &--fill-negative {
      background-color: var(--color-base-background-white);
    }
  }
}

.expander-list-link {
  padding: 0;
  position: relative;
  font-size: font-settings.$font-size-sm;
  line-height: font-settings.$lineheight-size-sm;
  display: flex;
  cursor: pointer;
  font-family: inherit;
  text-decoration: none;
  justify-content: space-between;
  align-items: center;
  letter-spacing: unset;
  color: var(--color-base-text-onlight);
  border: 0;
  width: 100%;
  outline: none;

  @media (min-width: map.get(breakpoints.$grid-breakpoints, md)) {
    font-size: font-settings.$font-size-md;
    line-height: font-settings.$lineheight-size-md;
  }

  &[aria-expanded='true'] {
    border-bottom: 1px solid var(--color-action-border-ondark);
  }

  &--open {
    font-weight: 600;
  }

  &--fill,
  &--fill-negative {
    margin-top: spacers.getSpacer(s);
  }

  &--fill-negative {
    background-color: var(--color-base-background-white);
  }

  &--closed#{&}--fill {
    margin-bottom: spacers.getSpacer(s);
  }

  &:focus-visible:not(.expander-list-link--outline) {
    outline: 0.25rem solid var(--color-action-border-onlight-focus);
  }

  &--white:not(.expander-list-link--outline, .expander-list-link--fill-negative) {
    &[aria-expanded='false'] {
      &:hover {
        background-color: var(--core-color-neutral-50);
      }

      &:active {
        background-color: var(--core-color-neutral-100);
      }
    }

    &[aria-expanded='true'] {
      background-color: var(--core-color-neutral-50);

      &:hover {
        background-color: var(--core-color-neutral-100);
      }

      &:active {
        background-color: var(--core-color-neutral-200);
      }
    }
  }

  &--blueberry:not(.expander-list-link--outline, .expander-list-link--fill-negative) {
    &[aria-expanded='false'] {
      &:hover {
        background-color: var(--core-color-blueberry-100);
      }

      &:active {
        background-color: var(--color-action-background-ondark-hoverselected);
      }
    }

    &[aria-expanded='true'] {
      background-color: var(--core-color-blueberry-100);

      &:hover {
        background-color: var(--core-color-blueberry-200);
      }

      &:active {
        background-color: var(--core-color-blueberry-300);
      }
    }
  }

  &--cherry:not(.expander-list-link--outline, .expander-list-link--fill-negative) {
    &[aria-expanded='false'] {
      &:hover {
        background-color: var(--core-color-cherry-100);
      }

      &:active {
        background-color: var(--core-color-cherry-200);
      }
    }

    &[aria-expanded='true'] {
      background-color: var(--core-color-cherry-100);

      &:hover {
        background-color: var(--core-color-cherry-200);
      }

      &:active {
        background-color: var(--core-color-cherry-300);
      }
    }
  }

  &--neutral:not(.expander-list-link--outline, .expander-list-link--fill-negative) {
    &[aria-expanded='false'] {
      &:hover {
        background-color: var(--core-color-neutral-100);
      }

      &:active {
        background-color: var(--core-color-neutral-200);
      }
    }

    &[aria-expanded='true'] {
      background-color: var(--core-color-neutral-100);

      &:hover {
        background-color: var(--core-color-neutral-200);
      }

      &:active {
        background-color: var(--core-color-neutral-300);
      }
    }
  }

  &--outline,
  &--fill-negative {
    background-color: var(--color-base-background-white);

    &:focus-visible {
      outline: 0.5rem solid var(--color-action-border-onlight-focus);
    }

    &--blueberry {
      &[aria-expanded='false'] {
        &:hover {
          background-color: var(--core-color-blueberry-50);
        }

        &:active {
          background-color: var(--core-color-blueberry-100);
        }
      }

      &[aria-expanded='true'] {
        background-color: var(--core-color-blueberry-50);

        &:hover {
          background-color: var(--core-color-blueberry-100);
        }

        &:active {
          background-color: var(--core-color-blueberry-200);
        }
      }
    }

    &--cherry {
      &[aria-expanded='false'] {
        &:hover {
          background-color: var(--core-color-cherry-50);
        }

        &:active {
          background-color: var(--core-color-cherry-100);
        }
      }

      &[aria-expanded='true'] {
        background-color: var(--core-color-cherry-50);

        &:hover {
          background-color: var(--core-color-cherry-100);
        }

        &:active {
          background-color: var(--core-color-cherry-200);
        }
      }
    }

    &--neutral,
    &--white {
      &[aria-expanded='false'] {
        &:hover {
          background-color: var(--core-color-neutral-50);
        }

        &:active {
          background-color: var(--core-color-neutral-100);
        }
      }

      &[aria-expanded='true'] {
        background-color: var(--core-color-neutral-50);

        &:hover {
          background-color: var(--core-color-neutral-100);
        }

        &:active {
          background-color: var(--core-color-neutral-200);
        }
      }
    }
  }

  &--large {
    font-size: font-settings.$font-size-lg;
    line-height: font-settings.$lineheight-size-lg;
  }

  &__icon {
    display: flex;
    align-items: center;
    margin-right: spacers.getSpacer(2xs);
  }

  &__chevron {
    display: flex;
    align-items: center;
    margin-left: auto;
    padding-left: spacers.getSpacer(2xs);
  }

  &__main-content {
    padding: 0;
    display: none;

    @media print {
      display: block;
    }

    &--expanded {
      display: block;
    }

    &--padding {
      padding: spacers.getSpacer(xs) spacers.getSpacer(s) spacers.getSpacer(l);
    }
  }
}
