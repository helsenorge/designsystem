@use 'sass:map';
@use '../../scss/palette' as palette;
@use '../../scss/font-settings' as font-settings;
@use '../../scss/breakpoints' as breakpoints;
@import '../../scss/supernova/styles/colors.css';
@import '../../scss/supernova/styles/spacers.css';

.drawer {
  position: fixed;
  inset: 0;
  display: flex;
  justify-content: center;
  align-items: flex-end;

  &__overlay {
    position: fixed;
    width: 100%;
    height: 100%;
    opacity: 0;
    background-color: var(--color-shadow-pagemask);
  }

  &__container {
    display: flex;
    flex-direction: column;
    position: fixed;
    width: 100%;
    max-height: 90dvh;
    transform: translateY(100%);
    background-color: var(--core-color-white);
    border-radius: 0.75rem 0.75rem 0 0;
    outline: none;

    @media (min-width: map.get(breakpoints.$grid-breakpoints, md)) {
      justify-content: space-between;
      height: 100%;
      max-height: 100dvh;
      border-radius: 0;
      max-width: 32rem;
      transform: translateX(-100%);
      left: 0;
    }

    &--right {
      @media (min-width: map.get(breakpoints.$grid-breakpoints, md)) {
        transform: translateX(100%);
        right: 0;
        left: unset;
      }
    }

    @include breakpoints.tiny-screens-media-query {
      max-height: 100dvh;
      border-radius: 0;
    }

    &__inner {
      display: flex;
      flex-direction: column;
      max-height: inherit;
      overflow: hidden;

      @include breakpoints.tiny-screens-media-query {
        overflow-y: auto;

        &:focus-visible {
          outline: 1px solid palette.$black;
          outline-offset: -1px;
        }
      }
    }
  }

  &__header {
    display: flex;
    align-items: center;
    justify-content: space-between;

    // legg til padding for Ã¥ gi plass til close button
    padding: var(--core-space-xs) 2.75rem var(--core-space-xs) var(--core-space-2xs);

    @media (min-width: map.get(breakpoints.$grid-breakpoints, md)) {
      padding: var(--core-space-xs) 2.75rem var(--core-space-xs) var(--core-space-xs);
    }

    @include breakpoints.tiny-screens-media-query {
      padding: var(--core-space-4xs) 0;
      flex-direction: column-reverse;
      align-items: flex-start;
    }

    &--no-close-button {
      padding: var(--core-space-xs) var(--core-space-2xs);

      @media (min-width: map.get(breakpoints.$grid-breakpoints, md)) {
        padding: var(--core-space-xs);
      }
    }

    &__close-button {
      position: absolute;
      top: 0;
      right: 0;

      @include breakpoints.tiny-screens-media-query {
        position: relative;
      }
    }
  }

  &__content {
    overflow-y: auto;

    &:focus-visible {
      outline: 1px solid palette.$black;
      outline-offset: -1px;
    }

    @include breakpoints.tiny-screens-media-query {
      overflow-y: unset;
    }

    &__children {
      padding: var(--core-space-xs) var(--core-space-2xs);

      @media (min-width: map.get(breakpoints.$grid-breakpoints, md)) {
        padding: var(--core-space-s) var(--core-space-xs);
      }
    }

    &__shadow {
      position: absolute;
      z-index: 10;
      height: 16px;
      width: 100%;
      transition: opacity 0.5s;
      opacity: 0;
      pointer-events: none;

      @include breakpoints.tiny-screens-media-query {
        display: none;
      }

      &--top {
        top: 0;
        margin-bottom: calc(0rem - var(--core-space-xs));
        background: linear-gradient(0deg, rgb(0 0 0 / 0%) 0%, rgb(0 0 0 / 45.7%) 100%);

        @media (min-width: map.get(breakpoints.$grid-breakpoints, md)) {
          margin-bottom: calc(0rem - var(--core-space-s));
        }
      }

      &--bottom {
        bottom: 0;
        background: linear-gradient(180deg, rgb(0 0 0 / 0%) 0%, rgb(0 0 0 / 45.7%) 100%);
        margin-top: calc(0rem - var(--core-space-xs));

        @media (min-width: map.get(breakpoints.$grid-breakpoints, md)) {
          margin-top: calc(0rem - var(--core-space-s));
        }
      }

      &--show {
        opacity: 1;
      }
    }
  }

  &__footer {
    display: flex;
    gap: var(--core-space-2xs) var(--core-space-m);
    padding: var(--core-space-s) var(--core-space-2xs);
    flex-wrap: wrap;

    @media (min-width: map.get(breakpoints.$grid-breakpoints, md)) {
      row-gap: var(--core-space-s);
      padding: var(--core-space-m) var(--core-space-xs);
    }

    @include breakpoints.tiny-screens-media-query {
      column-gap: var(--core-space-2xs) 0;
      padding: var(--core-space-2xs) 0;
    }
  }
}
