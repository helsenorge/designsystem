@use 'sass:map';
@use '../../scss/spacers' as spacers;
@use '../../scss/font-settings' as font-settings;
@use '../../scss/palette' as palette;
@use '../../scss/breakpoints' as *;
@import '../../scss/supernova/styles/colors';

.link-list {
  list-style: none;
  padding: 0;
  width: inherit;
  margin: 0;

  &__list-item {
    &--line {
      border-bottom: 1px solid var(--color-base-border-onlight);

      &:first-of-type {
        border-top: 1px solid var(--color-base-border-onlight);
      }
    }

    &--outline {
      &--white {
        border-top: spacers.getSpacer(2xs) var(--core-color-neutral-100) solid;
        border-left: spacers.getSpacer(2xs) var(--core-color-neutral-100) solid;
        border-right: spacers.getSpacer(2xs) var(--core-color-neutral-100) solid;

        &:last-of-type {
          border-bottom: spacers.getSpacer(2xs) var(--core-color-neutral-100) solid;
        }
      }

      &--blueberry {
        border-top: spacers.getSpacer(2xs) var(--core-color-blueberry-100) solid;
        border-left: spacers.getSpacer(2xs) var(--core-color-blueberry-100) solid;
        border-right: spacers.getSpacer(2xs) var(--core-color-blueberry-100) solid;

        &:last-of-type {
          border-bottom: spacers.getSpacer(2xs) var(--core-color-blueberry-100) solid;
        }
      }

      &--cherry {
        border-top: spacers.getSpacer(2xs) var(--core-color-cherry-100) solid;
        border-left: spacers.getSpacer(2xs) var(--core-color-cherry-100) solid;
        border-right: spacers.getSpacer(2xs) var(--core-color-cherry-100) solid;

        &:last-of-type {
          border-bottom: spacers.getSpacer(2xs) var(--core-color-cherry-100) solid;
        }
      }

      &--neutral {
        border-top: spacers.getSpacer(2xs) var(--core-color-neutral-100) solid;
        border-left: spacers.getSpacer(2xs) var(--core-color-neutral-100) solid;
        border-right: spacers.getSpacer(2xs) var(--core-color-neutral-100) solid;

        &:last-of-type {
          border-bottom: spacers.getSpacer(2xs) var(--core-color-neutral-100) solid;
        }
      }
    }
  }

  &__anchor {
    display: flex;
    min-height: 4rem;
    text-decoration: none;
    color: var(--color-base-text-onlight);
    cursor: pointer;

    &--button {
      width: 100%;
      background: none;
      border: none;
      text-align: left;
      box-sizing: border-box;
      padding: 0;
    }

    &--fill,
    &--line {
      &--white {
        background-color: var(--color-base-background-white);
      }

      &--blueberry {
        background-color: var(--core-color-blueberry-50);
      }

      &--cherry {
        background-color: var(--core-color-cherry-50);
      }

      &--neutral {
        background-color: var(--core-color-neutral-50);
      }
    }

    &--fill,
    &--fill-negative {
      margin-top: spacers.getSpacer(s);
    }

    &--fill-negative {
      background-color: var(--color-base-background-white);
    }

    &--small {
      font-size: font-settings.$font-size-xs;
      line-height: font-settings.$lineheight-size-xs;
    }

    &--medium {
      font-size: font-settings.$font-size-sm;
      line-height: font-settings.$lineheight-size-sm;
    }

    &--large {
      font-size: font-settings.$font-size-md;
      line-height: font-settings.$lineheight-size-md;
    }

    @media (min-width: map.get($grid-breakpoints, md)) {
      &--small {
        font-size: font-settings.$font-size-sm;
        line-height: font-settings.$lineheight-size-sm;
      }

      &--medium {
        font-size: font-settings.$font-size-md;
        line-height: font-settings.$lineheight-size-md;
      }

      &--large {
        font-size: font-settings.$font-size-lg;
        line-height: font-settings.$lineheight-size-lg;
      }
    }

    &--white:not(.link-list__anchor--outline) {
      &:hover {
        background-color: var(--core-color-blueberry-50);
      }

      &:active {
        background-color: var(--core-color-blueberry-100);
      }
    }

    &--blueberry:not(.link-list__anchor--outline) {
      &:hover {
        background-color: var(--core-color-blueberry-100);
      }

      &:active {
        background-color: var(--color-action-background-ondark-hoverselected);
      }
    }

    &--cherry:not(.link-list__anchor--outline) {
      &:hover {
        background-color: var(--core-color-cherry-100);
      }

      &:active {
        background-color: var(--core-color-cherry-200);
      }
    }

    &--neutral:not(.link-list__anchor--outline) {
      &:hover {
        background-color: var(--core-color-neutral-100);
      }

      &:active {
        background-color: var(--core-color-neutral-200);
      }
    }

    &:focus,
    &:focus-visible {
      outline: 4px solid var(--color-action-border-onlight-focus);
    }

    &--outline {
      background-color: var(--color-base-background-white);

      &--white {
        background-color: var(--color-base-background-white);
      }

      &--blueberry {
        &:hover {
          background-color: var(--core-color-blueberry-50);
        }

        &:active {
          background-color: var(--core-color-blueberry-100);
        }
      }

      &--cherry {
        &:hover {
          background-color: var(--core-color-cherry-50);
        }

        &:active {
          background-color: var(--core-color-cherry-100);
        }
      }

      &--neutral {
        &:hover {
          background-color: var(--core-color-neutral-50);
        }

        &:active {
          background-color: var(--core-color-neutral-100);
        }
      }
    }
  }
}
