@use 'sass:map';
@use '../../scss/spacers' as spacers;
@use '../../scss/palette' as palette;
@use '../../scss/font-settings' as font-settings;
@use '../../scss/screen-reader' as *;
@use '../../scss/breakpoints' as *;

$status-dot-size: 0.937rem;

.statusdot {
  position: relative;
  display: inline-flex;
  align-items: flex-start;
  font-size: font-settings.$font-size-xs;
  line-height: 1.4rem;
  font-weight: 400;

  @media (min-width: map.get($grid-breakpoints, sm)) {
    font-size: font-settings.$font-size-sm;
    line-height: 1.6rem;
  }

  &--cancelled {
    color: palette.$cherry600;
  }

  &__dot {
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
    top: spacers.getSpacer(4xs);
    margin-right: spacers.getSpacer(2xs);
    border-radius: 10rem;
    width: $status-dot-size;
    height: $status-dot-size;
    min-width: $status-dot-size;
    min-height: $status-dot-size;

    @media (min-width: map.get($grid-breakpoints, sm)) {
      top: spacers.getSpacer(3xs);
    }

    &--info {
      background: palette.$kiwi900;
    }
    &--info#{&}--on-dark {
      background: palette.$kiwi400;
    }

    &--warning {
      background: palette.$banana400;
    }

    &--alert,
    &--cancelled {
      background: palette.$cherry500;
    }
    &--alert#{&}--on-dark {
      background: palette.$cherry300;
    }
    &--cancelled#{&}--on-dark {
      outline: 2px solid palette.$white;
    }

    &--active {
      background: palette.$blueberry500;
    }
    &--active#{&}--on-dark {
      background: palette.$blueberry300;
    }

    &--transparent {
      border: 2px solid palette.$neutral600;
    }
    &--transparent#{&}--on-dark {
      border: none;
      background: palette.$white;
    }

    svg {
      position: absolute;
    }
  }

  &__label {
    &--on-dark {
      color: palette.$white;
    }
  }
}
