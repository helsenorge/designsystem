@use 'sass:map';
@import '../../scss/spacers';
@import '../../scss/breakpoints';
@import '../../scss/palette';
@import '../../scss/font-settings';

.tag {
  $tag: &;

  display: inline-flex;
  justify-content: space-between;
  align-items: center;
  text-transform: uppercase;
  border-width: 1px;
  border-style: solid;
  background-color: transparent;

  // komponenten bruker ekstra liten font-size og line-height
  font-size: 0.875rem;
  line-height: 1.125rem;
  font-weight: 600;
  border-radius: 100px;

  $colors: 'blueberry', 'neutral', 'cherry', 'banana', 'kiwi', 'plum';

  @each $color in $colors {
    &--#{$color},
    // SÃ¸rg for at fargene overstyrer dersom tag har type=button
    &--#{$color}[type='button'] {
      // banana og kiwi har unntak fra hovedregelen
      @if $color == 'banana' {
        color: map.get($palette-map, #{$color}900);
        border-color: map.get($palette-map, #{$color}300);
      } @else if $color == 'kiwi' {
        color: map.get($palette-map, #{$color}900);
        border-color: map.get($palette-map, #{$color}200);
      } @else {
        color: map.get($palette-map, #{$color}800);
        border-color: map.get($palette-map, #{$color}200);
      }

      &#{$tag}--emphasised {
        background-color: map.get($palette-map, #{$color}50);
      }
    }
  }

  &--medium {
    padding: 0 getSpacer(xs);
    min-height: 1.625rem;

    &#{$tag}--has-icon {
      padding: 0 getSpacer(xs) 0 0.375rem;
    }

    #{$tag}__icon {
      margin-right: getSpacer(4xs);
    }
  }

  &--large {
    padding: 0 getSpacer(xs);
    min-height: 1.875rem;

    &#{$tag}--has-icon {
      padding: getSpacer(4xs) getSpacer(xs) getSpacer(4xs) 0.375rem;
    }

    #{$tag}__icon {
      margin-right: getSpacer(4xs);
    }
  }
}
