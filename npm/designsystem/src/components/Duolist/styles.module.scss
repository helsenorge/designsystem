@use 'sass:map';
@import '../../scss/breakpoints';
@import '../../scss/font-settings';
@import '../../scss/palette';
@import '../../scss/spacers';

.duolist-wrapper {
  &--border {
    padding: getSpacer(s) getSpacer(s) getSpacer(l);
    border: 0.062rem solid $neutral500;
  }

  &--extra-padding-top {
    padding-top: getSpacer(xl);
    padding-bottom: getSpacer(xl);
  }
}

.duolist {
  font-size: $font-size-sm;
  margin: 0;
  display: grid;

  @media (min-width: map.get($grid-breakpoints, sm)) {
    font-size: $font-size-md;
  }

  &__dt {
    padding-right: getSpacer(l);

    @media (min-width: map.get($grid-breakpoints, sm)) {
      padding-right: 2.6669rem;
    }

    &--non-formatted {
      padding-right: 0;
    }
    &--non-formatted#{&}::after {
      content: attr(data-separator);
      font-weight: 400;
    }
  }

  &__dd {
    margin-inline-start: 0;
  }

  &__dt,
  &__dd {
    line-height: $lineheight-size-md;
    padding-bottom: getSpacer(2xs);

    &:last-of-type {
      padding-bottom: 0;
    }

    &--bold {
      font-weight: 600;
      line-height: $lineheight-size-sm;
    }

    &--non-formatted {
      display: inline;
    }
  }

  &--line &__dt,
  &--line &__dd {
    padding-top: getSpacer(2xs);
    padding-bottom: getSpacer(2xs);
    border-top: 0.062rem solid $neutral200;

    &:last-of-type {
      padding-bottom: getSpacer(2xs);
      border-bottom: 0.062rem solid $neutral200;
    }
  }

  &--non-formatted {
    display: unset;
  }
}
