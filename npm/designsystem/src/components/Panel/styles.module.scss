@use '../../scss/spacers' as spacers;
@use '../../scss/supernova/styles/colors' as *;
@use '../../scss/breakpoints' as breakpoints;
@use '../../scss/font-settings' as fonts;
@use '../Button/styles.module' as *;

.panel {
  $panel: &;

  display: flex;
  flex-flow: column;
  gap: spacers.getSpacer(s);
  padding: spacers.getSpacer(s);
  border: 2px solid var(--color-base-border-onlight);
  width: 100%;

  @media (min-width: breakpoints.get(md)) {
    padding: spacers.getSpacer(m);
  }

  &--icon {
    padding-left: calc(3.5rem + spacers.getSpacer(s));

    @media (min-width: breakpoints.get(md)) {
      padding-left: calc(4rem + spacers.getSpacer(m));
    }
  }

  &__pre-container {
    width: 100%;
  }

  &__content {
    width: 100%;
    height: 100%;
    display: flex;
    flex-flow: column;
    gap: spacers.getSpacer(m);

    &__item {
      width: 100%;
      height: 100%;
    }

    &--b-first {
      .panel__content__item--b {
        order: -1;
      }
    }

    &--horizontal {
      @media (min-width: breakpoints.get(md)) {
        flex-flow: row;
      }
    }

    &--vertical {
      @media (min-width: breakpoints.get(md)) {
        flex-flow: column;
      }
    }

    &--combined {
      @media (min-width: breakpoints.get(md)) {
        display: grid;
        grid-template-areas:
          'contentA contentB'
          'contentC contentC';

        & .panel__content__item--a {
          grid-area: contentA;
        }

        & .panel__content__item--b {
          grid-area: contentB;
        }

        & .panel__content__item--c {
          grid-area: contentC;
        }
      }
    }

    &--bAsRightCol {
      @media (min-width: breakpoints.get(md)) {
        display: grid;
        grid-template-areas:
          'contentA contentB'
          'contentC contentB';

        & .panel__content__item--a {
          grid-area: contentA;
        }

        & .panel__content__item--b {
          grid-area: contentB;
        }

        & .panel__content__item--c {
          grid-area: contentC;
        }
      }
    }
  }

  &--white {
    background-color: var(--color-base-background-white);

    &--hover {
      background-color: var(--color-base-background-neutral);
    }
  }

  &--blueberry {
    background-color: var(--color-base-background-blueberry);

    &--hover {
      background-color: var(--color-base-background-neutral);
    }
  }

  &--neutral {
    background-color: var(--color-base-background-neutral);

    &--hover {
      background-color: var(--core-color-neutral-100);
    }
  }

  &--fill {
    border: none;
  }

  &--line {
    border: none;
  }

  &__border--outline {
    border: 8px solid var(--core-color-neutral-100);
  }

  &__border--line {
    border-top: 1px solid var(--color-base-border-ondark);
    border-bottom: 1px solid var(--color-base-border-ondark);
    border-right: none;
    border-left: none;
  }

  &--border {
    border: 2px solid var(--color-base-background-white);
  }

  &--status {
    border-left: 0.375rem;
    border-left-style: solid;
  }

  &--new {
    border-left-color: var(--core-color-blueberry-500);
  }

  &--draft {
    border-left-style: dashed;
    border-left-color: var(--core-color-neutral-500);
  }

  &--error {
    border-left-color: var(--core-color-cherry-500);
  }

  &__expander {
    padding: spacers.getSpacer(s);
    padding-top: 0;

    &--hover {
      background-color: var(--core-color-neutral-100);
    }

    &--white {
      background-color: var(--color-base-background-white);
    }

    &--neutral {
      background-color: var(--color-base-background-neutral);
    }

    &--blueberry {
      background-color: var(--color-base-background-blueberry);
    }

    &__border {
      &--white {
        border: 2px solid var(--color-base-background-white);
      }

      &--neutral {
        border: 2px solid var(--color-base-background-neutral);
      }

      &--blueberry {
        border: 2px solid var(--color-base-background-blueberry);
      }

      &--expanded {
        border-left: 2px solid var(--color-base-border-onlight-emphasized);
      }
    }

    &__separator {
      height: 1px;
      background-color: var(--color-base-border-ondark);
    }

    &__content {
      margin-top: spacers.getSpacer(s);
    }
  }
}

.expander__button--hover {
  background-color: red;
}
