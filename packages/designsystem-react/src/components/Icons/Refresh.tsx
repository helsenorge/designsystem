import React from 'react';
import {IconRawProps} from './Icon';

const Refresh = React.forwardRef((svgProps: IconRawProps, ref: any) => {
  const {size = 48, color = 'black', hoverColor = 'black', isHovered = false, ...props} = svgProps;
  const isExtraSmall = size <= 38;
  const normal = (
    <g fill="none" fill-rule="evenodd" stroke-width="1.3" transform="translate(10 10)">
      <path d="M27.3258,16.908 C26.0708,23.043 20.6428,27.658 14.1368,27.658 C6.7018,27.658 0.6748,21.63 0.6748,14.195 C0.6748,6.76 6.7018,0.732 14.1368,0.732 C18.6498,0.732 22.6428,2.952 25.0858,6.361" />
      <polyline points="25.716 .343 25.409 6.843 19.194 6.843" />
    </g>
  );

  const normalHover = (
    <g fill="none" fill-rule="evenodd" stroke-width="1.3" transform="translate(10 10)">
      <path d="M21.5443,25.4392 C16.3183,28.8892 9.2173,28.3142 4.6173,23.7142 C-0.6407,18.4572 -0.6407,9.9332 4.6173,4.6752 C9.8753,-0.5818 18.3983,-0.5818 23.6563,4.6752 C26.8473,7.8662 28.1013,12.2602 27.4193,16.3972" />
      <polyline points="32.12 12.588 27.306 16.967 22.912 12.573" />
    </g>
  );

  const simplified = (
    <path
      fill-rule="evenodd"
      d="M36.7705263,26.8863158 C35.5692632,32.7625263 30.3334737,37.0294737 24.3233684,37.0294737 C17.3191579,37.0294737 11.6197895,31.3313684 11.6197895,24.3258947 C11.6197895,17.3204211 17.3191579,11.6197895 24.3233684,11.6197895 C28.1014737,11.6197895 31.6724211,13.3326316 34.0762105,16.2164211 L29.3823158,16.2164211 L29.3823158,17.7309474 L36.3208421,17.7309474 L36.6618947,10.5094737 L35.1473684,10.4387368 L34.9376842,14.8762105 C32.2547368,11.8698947 28.3932632,10.1052632 24.3233684,10.1052632 C16.4829474,10.1052632 10.1052632,16.4842105 10.1052632,24.3258947 C10.1052632,32.1663158 16.4829474,38.544 24.3233684,38.544 C31.0509474,38.544 36.9094737,33.7692632 38.256,27.1894737 L36.7705263,26.8863158 Z"
    />
  );

  const simplifiedHover = (
    <path
      fill-rule="evenodd"
      d="M41.7909474,22.1523158 L38.5054737,25.1422105 C38.7328421,21.1190526 37.2498947,17.1413684 34.3736842,14.2651579 C28.8296842,8.71863158 19.8082105,8.71863158 14.2642105,14.2651579 C8.71894737,19.8091579 8.71894737,28.8306316 14.2642105,34.3758947 C17.004,37.1156842 20.6621053,38.5304211 24.3429474,38.5304211 C27.0498947,38.5304211 29.7682105,37.7649474 32.1429474,36.1973684 L31.3092632,34.9316842 C26.3021053,38.2361053 19.5846316,37.5502105 15.3353684,33.3034737 C10.3825263,28.3493684 10.3825263,20.2891579 15.3353684,15.3363158 C20.2894737,10.3847368 28.3484211,10.3847368 33.3025263,15.3363158 C35.9741053,18.0066316 37.2877895,21.7430526 36.9492632,25.482 L33.6309474,22.1624211 L32.5572632,23.2323158 L37.4633684,28.1396842 L42.8128421,23.2727368 L41.7909474,22.1523158 Z"
    />
  );

  return (
    <svg
      width={size}
      height={size}
      fill={isHovered ? hoverColor : color}
      stroke={isHovered ? hoverColor : color}
      viewBox="0 0 48 48"
      ref={ref}
      className="icon"
      {...props}>
      {isExtraSmall ? (isHovered ? simplifiedHover : simplified) : isHovered ? normalHover : normal}
    </svg>
  );
});

export default Refresh;
