import React from 'react';
import {IconRawProps} from './Icon';

const Copy = React.forwardRef((svgProps: IconRawProps, ref: any) => {
  const {size = 48, className, color = 'black', hoverColor = 'black', isHovered = false, ...props} = svgProps;
  const isExtraSmall = size <= 38;
  const normal = (
    <g fillRule="evenodd" transform="translate(11 7)">
      <polygon points="26.563 30.601 22.031 30.601 22.031 29.3 25.263 29.3 25.263 2.237 4.656 2.237 4.656 5.08 3.356 5.08 3.356 .936 26.563 .936" />
      <path d="M1.8384,30.9362 L21.3804,30.9362 L21.3804,11.4872 L15.6824,5.7302 L1.8384,5.7302 L1.8384,30.9362 Z M22.6804,32.2372 L0.5384,32.2372 L0.5384,4.4292 L16.2244,4.4292 L22.6804,10.9522 L22.6804,32.2372 Z" />
      <polygon points="22.031 11.87 15.303 11.87 15.303 5.08 16.603 5.08 16.603 10.569 22.031 10.569" />
      <polygon points="7.653 19.792 15.435 19.792 15.435 18.8 7.653 18.8" />
      <polygon points="11.049 23.188 12.041 23.188 12.041 15.405 11.049 15.405" />
    </g>
  );

  const normalHover = (
    <g fillRule="evenodd" transform="translate(11 4)">
      <polygon points="26.408 33.601 21.876 33.601 21.876 32.3 25.108 32.3 25.108 5.237 4.501 5.237 4.501 8.08 3.201 8.08 3.201 3.936 26.408 3.936" />
      <path d="M1.6831,33.9362 L21.2251,33.9362 L21.2251,14.4872 L15.5271,8.7302 L1.6831,8.7302 L1.6831,33.9362 Z M22.5251,35.2372 L0.3831,35.2372 L0.3831,7.4292 L16.0691,7.4292 L22.5251,13.9522 L22.5251,35.2372 Z" />
      <polygon points="30.489 30.13 25.083 30.13 25.083 28.828 29.189 28.828 29.189 1.764 8.582 1.764 8.582 4.609 7.282 4.609 7.282 .464 30.489 .464" />
      <polygon points="21.875 14.87 15.149 14.87 15.149 8.08 16.448 8.08 16.448 13.569 21.875 13.569" />
      <polygon points="7.499 22.792 15.281 22.792 15.281 21.8 7.499 21.8" />
      <polygon points="10.893 26.188 11.886 26.188 11.886 18.405 10.893 18.405" />
    </g>
  );

  const simplified = (
    <path
      fillRule="evenodd"
      d="M13.6490526,8.19473684 L13.6490526,11.6898947 L10.8322105,11.6898947 L10.8322105,39.8052632 L33.2873684,39.8052632 L33.2873684,38.1707368 L37.1677895,38.1707368 L37.1677895,8.19473684 L13.6490526,8.19473684 Z M15.2595789,9.80526316 L35.5572632,9.80526316 L35.5572632,36.5602105 L33.2873684,36.5602105 L33.2873684,18.3012632 L26.7391579,11.6898947 L15.2595789,11.6898947 L15.2595789,9.80526316 Z M12.4427368,13.3004211 L25.5972632,13.3004211 L25.5972632,19.4381053 L31.6743158,19.4381053 L31.6743158,38.1947368 L12.4427368,38.1947368 L12.4427368,13.3004211 Z M27.2077895,14.4524211 L30.5488421,17.8275789 L27.2077895,17.8275789 L27.2077895,14.4524211 Z M21.3682105,22.8208421 L21.3682105,26.0848421 L18.1016842,26.0848421 L18.1016842,27.3378947 L21.3682105,27.3378947 L21.3682105,30.6018947 L22.6212632,30.6018947 L22.6212632,27.3378947 L25.8865263,27.3378947 L25.8865263,26.0848421 L22.6212632,26.0848421 L22.6212632,22.8208421 L21.3682105,22.8208421 Z"
    />
  );

  const simplifiedHover = (
    <path
      fillRule="evenodd"
      d="M17.7303158,4.72357895 L17.7303158,8.19473684 L13.6503158,8.19473684 L13.6503158,11.6886316 L10.8322105,11.6886316 L10.8322105,39.8052632 L33.2861053,39.8052632 L33.2861053,38.1707368 L37.1677895,38.1707368 L37.1677895,34.6983158 L41.2477895,34.6983158 L41.2477895,4.72357895 L17.7303158,4.72357895 Z M19.3408421,6.33410526 L39.6372632,6.33410526 L39.6372632,33.0877895 L37.1677895,33.0877895 L37.1677895,8.19473684 L19.3408421,8.19473684 L19.3408421,6.33410526 Z M15.2608421,9.80526316 L35.556,9.80526316 L35.556,36.5602105 L33.2861053,36.5602105 L33.2861053,18.3012632 L26.7378947,11.6886316 L15.2608421,11.6886316 L15.2608421,9.80526316 Z M12.444,13.3004211 L25.5972632,13.3004211 L25.5972632,19.4381053 L31.6743158,19.4381053 L31.6743158,38.1947368 L12.444,38.1947368 L12.444,13.3004211 Z M27.2077895,14.4524211 L30.5488421,17.8263158 L27.2077895,17.8263158 L27.2077895,14.4524211 Z M21.3669474,22.8195789 L21.3669474,26.0848421 L18.1029474,26.0848421 L18.1029474,27.3378947 L21.3669474,27.3378947 L21.3669474,30.6018947 L22.62,30.6018947 L22.62,27.3378947 L25.8865263,27.3378947 L25.8865263,26.0848421 L22.62,26.0848421 L22.62,22.8195789 L21.3669474,22.8195789 Z"
    />
  );

  return (
    <svg
      width={size}
      height={size}
      fill={isHovered ? hoverColor : color}
      viewBox="0 0 48 48"
      ref={ref}
      className={`hnds-style-icon ${className}`}
      {...props}>
      {isExtraSmall ? (isHovered ? simplifiedHover : simplified) : isHovered ? normalHover : normal}
    </svg>
  );
});

export default Copy;
